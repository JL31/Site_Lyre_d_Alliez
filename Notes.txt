
Site de la Lyre
---------------

# =====================================================================================================================
# Contenu
# =====================================================================================================================

- compte utilisateur pour les membres
- accès aux photos et vidéos seulement pour les membres
- possibilitée de commenter les articles/news seulement pour les membres
- articles/news
- les outils du chef : envoi de mail à la mailing list pré-enregistrée, modification de la mailing list, définition des dates de concert
- photos
- vidéos (quid du lecteur vidéo ?)
- agenda (avec alertes)
- historique des programmes
- articles de presse
- présentation de l'asso
- membres du bureau
- lien vers l'école de musique de Didier
- nos relations avec d'autres harmonies ?
- nos "sponsors"/"soutiens"
- articles/tuto/conseils : entretien des instru, techniques particulières, point de solfège --> comment catégoriser ?
- zone de partage d'infos/de bons plans (vente d'instru par exemples)
- contact
- plan du site ?
- mentions légales ?
- rajouter une liste déroulante dans la page d'admin des Membres afin d'ajouter un rôle dans le cas où le membre fait partie du Bureau

# =====================================================================================================================
# Questions
# =====================================================================================================================

- d'une manière générale y a-t-il des fichiers qu'il vaut mieux éviter de mettre en gestion de conf ?
- faut-il dès le début penser i18n et écrire toutes les strings en respectant ce procédé ?
- git flow pour le dév : bien/pas bien ?

# =====================================================================================================================
# Menu (navigation)
# =====================================================================================================================

Actualités [tous] / L'asso [tous] / Photos [membres] / Vidéos [membres] / Zone de partage [membres] / Les outils du chef [Didier]

# =====================================================================================================================
# Détails menu
# =====================================================================================================================

Actualités :
- Agenda (dates des concerts)
- Calendrier des concerts
  --> redondance entre les deux catégories précédentes ?
- Articles/infos

L'asso :
- Présentation : notre histoire
  --> flatpage ou TemplateView
- Le bureau
  --> flatpage ou TemplateView
- Les pupitres
  --> flatpage ou TemplateView
- Articles de presse
- Historique des concerts (avec leur programme)
  --> un dossier par année
- Nos soutiens --> à déplacer près du footer pour un affichage permanent ?
               --> ou alors un bandeau à défilement automatique (cf site OneStock) ?
               --> les stocker dans une BDD séparée ?

Zone de partage :
- Les bons plans
- Conseils
- Tutoriels

# =====================================================================================================================
# Concernant l'architecture des templates
# =====================================================================================================================

- un fichier "base.html" contenant des blocks titre (dans le head), navigation, contenu et footer
- un fichier "navigation.html" qui étend le fichier "base.html"
- un fichier "footer.html" qui étend le fichier "navigation.html"
- un fichier "base_etendue.html" qui étend le fichier "footer.html"

Tous les autres templates étendront le fichier "base_etendue.html"


# =====================================================================================================================
# Détail "Agenda"
# =====================================================================================================================

--> https://simpleisbetterthancomplex.com/tutorial/2019/01/03/how-to-use-date-picker-with-django.html

==> cf JavaScript ?

https://pypi.org/project/django-bootstrap-modal-forms/
https://trco.si/dbmf/


# =====================================================================================================================
# Détail "Photos"
# =====================================================================================================================

Il y aura un dossier par année.
Au sein d'une année il y aura plusieurs dossiers, un pour chaque évènement.
Quid de l'affichage :
--- carrés pour ensuite zoomer ?
--- bandeau avec miniatures en dessous d'un zoom ?
Associer la/les photos(s) à un évènement ?
S'il n'y a pas d'évènements (par exemple auberge espagnole)
Mettre en place une zone de glisser-déposer (https://simpleisbetterthancomplex.com/tutorial/2016/11/22/django-multiple-file-upload-using-ajax.html)


# =====================================================================================================================
# Détail "Vidéos"
# =====================================================================================================================

Il y aura un dossier par année, le clic sur le menu fera apparaître un menu déroulant permettant de choisir l'année.
Au sein d'une année il y aura plusieurs dossiers, un pour chaque évènement.


# =====================================================================================================================
# Détail des profils des membres
# =====================================================================================================================

ajouter avatar
--> les options du membre seront disponibles via cet avatar qui sera affcihé en permanence en haut à droite du site
--> voir comment faire pour ajouter un avatar par défaut si pas spécifié par le membre ?

avatar
identifiant
prénom
adresse email
description
instrument --> proposer un menu déroulant
chant : oui / non
membre de l'orchestre : oui / non --> soumis à validation
membre du bureau : oui / non --> soumis à validation
chef : oui / non ? --> soumis à validation

autorisation pour l'accès aux zones membre
process :
- inscription via le formulaire adéquat
- envoi de mail auto à l'admin pour valider le profil, i.e. lui fournir l'autorisation aux zones membres + (le cas échéant) statut membre du bureau + statut du chef

# =====================================================================================================================
# Accès membres/visiteurs
# =====================================================================================================================

https://stackoverflow.com/questions/41247569/how-to-get-extended-user-custom-fields-in-django-template
https://simpleisbetterthancomplex.com/tutorial/2016/06/27/how-to-use-djangos-built-in-login-system.html
https://django.readthedocs.io/en/2.2.x/ref/settings.html#std:setting-LOGIN_REDIRECT_URL

envoi mail  -->  https://simpleisbetterthancomplex.com/tutorial/2016/06/13/how-to-send-email.html


# =====================================================================================================================
# Détail "L'asso" / "Les pupitres"
# =====================================================================================================================

mettre une image (interactive ?) en forme de demi cercle avec différents découpages de cette image avec les noms des instruments dans chaque découpage ?
lorsqu'un utilisateur cliquera sur un découpage correspondant à un instrument la page se mettra à jour pour afficher les informations relatives à ce pupitre
remplissage automatique des catégories en fonctions des détails des profils des membres ?
quid si les membres ne veulent pas de compte ?
créer quand même un compte en leur nom ?

clarinettes
flûte traversières et piccolos
piano
xylophone / marimba
chanteurs / chanteuses
saxophones
--> sopranos
--> altos
--> ténors
--> barytons
--> basses
trombones
    --> différencier les catégories ?
trompettes
    --> différencier les catégories ?
tuba
euphonium
    --> différencier les catégories ?
guitare
basse
batterie et percussions


# =====================================================================================================================
# Membres de test
# =====================================================================================================================

username : Tutu
prénom : Toto
email : a.b@c.fr
mdp: Pomme2rainette

username : Chef
prénom : Did
email : c.d@e.fr
mdp : Poire1fois

username : Bob
prénom : b
email : b.t@f.fr
mdp : Bob123456


# =====================================================================================================================
# Notes ré-inint database
# =====================================================================================================================

https://stackoverflow.com/questions/30267237/invalidbaseserror-cannot-resolve-bases-for-modelstate-users-groupproxy
https://stackoverflow.com/questions/12784835/django-no-such-table


!!! Penser à faire les migrations seulement des modèles qui changent !!!

1. commenter le modèle incriminé

2. refaire la migration :
   python manage.py makemigrations
   python manage.py migrate

3. décommneter le modèle incriminé

4. refaire la migration :
   python manage.py makemigrations
   python manage.py migrate --run-syncdb


# =====================================================================================================================
# Infos Mailjet
# =====================================================================================================================

Identifiants
------------

Nom d'utilisateur (clé API)
cf site

Mot de passe (Clé secrète)
cf site

Configuration
-------------

Serveur SMTP
in-v3.mailjet.com

Utiliser TLS
optionnel

Port
25 ou 587 (certains hébergeurs bloquent le port 25)


# =====================================================================================================================
# Notes versions
# =====================================================================================================================

1.0     tout implémenter côté back-end
1.1     re-architecture du code avec plusieurs applications
1.2     s'assurer que les API soient REST (RESTFull ?)
1.3     déploiement avec Docker
1.4     développer le front-end et l'aspect graphique/visuel du site
        --> concernant les formulaires : penser à les gérer avec des requètes AJAX afin de ne pas faire les vérif côté back-end
            ceci afin d'éviter de saturer la bande passante
            cela permettra de ne pas vérifier le contenu des champ du formulaire des requêtes POST et éviter ainsi des allers-retours entre front et back
1.5     architecture micro-services ?


# =====================================================================================================================
# Reste à faire
# =====================================================================================================================

Actualités      --> Calendrier

Photos          --> tout
Vidéos          --> tout

Zone de partage --> Les bons plans
Zone de partage --> Conseils
Zone de partage --> Tutoriels

re-créer le projet en améliorant la gestionde conf : créer une branche dev !

Revenir à la gestion des membres (cf ci-dessous)


# =====================================================================================================================
# Historique des concerts
# =====================================================================================================================

lorsque l'on cliquera sur un évènement cela affichera un pop-up avec le programme


# =====================================================================================================================
# Gestion des membres
# =====================================================================================================================

Au final mettre en place :

1) si le membre n'est pas connecté afficher un lien "Se connecter" dans le bandeau.
   lors du clic sur ce lien une fenêtre style pop-up apparaîtra pour afficher le formulaire de connexion
   il faudra prévoir dans ce pop-up un lien vers "j'ai oublié mon mot de passe"
   si les infos sont correctes alors le membre sera connecté et un message de bienvenue apparaîtra (via les messages des django)
   le message sera affiché dans un bandeau qui apparaîtra puis disparaitra

2) si le membre est connecté afficher dans le bandeau, à la place du lien "Se connecter", l'avatar du membre

3) si un membre clique sur son avatar il pourra :
   - accéder à ses informations personnelles pour les consulter
   - modifier son mot de passe
   - se déconnecter

